---
- name: Create server
  os_server:
    name: "{{ item.instance_name }}"
    cloud: "{{ openstack_cloud }}"
    security_groups: "{{ item.security_group_name }}"
    meta: "group={{ item.group }},deployment={{ item.deployment }}"
    key_name: "ansible_ssh_key"
    image: "rhel-7.6"
    flavor: "m2.medium"
    delete_fip: yes
    wait: yes
    state: "{{ openstack_server_state | default('present') }}"
    nics:
    - net-name: "int_network"
    userdata: |
      #!/bin/bash curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
    floating_ips: 
  loop: "{{ openstack_servers }}"
  async: 900
  poll: 0
  register: os_output

- name: Wait for servers
  async_status: "jid={{ item.ansible_job_id }}"
  register: os_status
  until: os_status.finished
  retries: 900
  loop: "{{ os_output.results }}"

- debug:
    msg:
    - "{{ item.server.name }}"
    - "{{ item.server.instance_name }}"
  loop: "{{ os_status.results }}"
  loop_control:
    label: "{{ item.server.instance_name }}"

- when: openstack_server_state | default('')  != 'absent' 
  block:
    - name: Add floating ip
      os_floating_ip:
        cloud: "{{ openstack_cloud }}"
        server: "{{ item.server.id }}"
        state: "{{ openstack_server_state | default('present') }}"
        reuse: yes
        wait: yes
        network: ext_network
      loop: "{{ os_status.results }}"
      loop_control:
        label: "{{ item.server.name }}"
      register: fip_output

    - name: wait for servers
      wait_for:
        host: "{{ item.floating_ip.floating_ip_address }}"
        port: 22
        search_regex: OpenSSH
        timeout: 600
      loop: "{{  fip_output.results }}"
      delegate_to: "{{ inventory_hostname }}"
